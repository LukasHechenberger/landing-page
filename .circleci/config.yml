defaults: &defaults
  docker:
    - image: cimg/node:18.13

git-login: &git-login
  name: Setting up git user
  command: git config --global user.email ci@ls-age.com && git config --global user.name "ls-age CI"

version: 2
jobs:
  install-deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-npm-deps-{{ checksum "package-lock.json" }}
            - v2-npm-deps
      - run:
          name: Installing npm dependencies
          command: npm ci
      - save_cache:
          key: v2-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-api-cache
      - run:
          name: Building and export app
          command: npm run export
      - save_cache:
          key: v1-api-cache
          paths:
            - ./data/cache
      - persist_to_workspace:
          root: .
          paths:
            - __sapper__
            - static/css
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Lint sources
          command: npm run lint -- --format junit --output-file ~/reports/eslint.xml
      - run:
          name: Check formatting
          command: npm run format -- --check
          when: always
      - store_test_results:
          path: ~/reports
          when: always
      - store_artifacts:
          path: ~/reports
          when: always

  test:
    <<: *defaults
    docker:
      - image: cypress/included:3.2.0
        environment:
          # Enable colors in the output
          TERM: xterm
    working_directory: /home/circleci/project
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Running tests
          command: npm run test:ci
      - store_test_results:
          path: test/report
      - store_artifacts:
          path: test/report

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          <<: *git-login
      - run:
          name: Deploying to github pages
          command: |
            git log -1 --pretty=%B > ../message
            git clone git@github.com:ls-age/ls-age.github.io.git ../pages
            cd ../pages
            git rm -rf .
            cp -r ../project/__sapper__/export/* .
            git add .
            git commit -m "$(cat ../message)"
            git push origin master
            cd ../project
      # - run:
      #     name: Deploy to ls-age.com
      #     command: node ./scripts/deploy.js

  lighthouse:
    <<: *defaults
    docker:
      - image: cimg/node:18.13-browsers
    steps:
      - checkout
      - run:
          <<: *git-login
      - restore_cache:
          keys:
            - v1-lighthouse-cache
      - run:
          name: Update lighthouse badges
          command: npx lighthouse-badges -o docs/assets -u https://ls-age.github.io
      - save_cache:
          key: v1-lighthouse-cache
          paths:
            - ~/.npm
      - run:
          name: Commit lighthouse badges
          command: |
            git add docs/assets
            if git diff --name-only --cached --exit-code; then
              echo "Nothing to commit";
            else
              git commit -m "docs(readme): Update lighthouse badges [ci skip]

              $(git log -1 --pretty=%B)"
              git push origin master
            fi

workflows:
  version: 2

  test-and-deploy:
    jobs:
      - install-deps
      - build:
          requires:
            - install-deps
      - test:
          requires:
            - build
      - lint:
          requires:
            - install-deps
      - deploy:
          requires:
            - test
            - build
            - lint
          filters:
            branches:
              only:
                - master
                - update-company
      - lighthouse:
          requires:
            - deploy
  update-content:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - install-deps
      - build:
          requires:
            - install-deps
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
